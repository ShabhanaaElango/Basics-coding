1.//Even or Odd in c
#include <stdio.h>

int main() {
    int n;
    scanf("%d",&n);
    if(n%2==0)
    {
        printf("%d is a Even",n);
    }
    else{
    printf("%d is a Odd",n);
    }

    return 0;
}


2.// First and Last digit
#include <stdio.h>
int firstdigit(int n){
    while(n>=10)
    {
        n = n/10;
    }
    return n;
}
int lastdigit(int n){
    return n%10;
}
int main() {
    int n;
    scanf("%d",&n);
    printf("First digit is %d\n",firstdigit(n));
    printf("Last digit is %d",lastdigit(n));

    return 0;
}


3. // count no.of digits in a number
#include <stdio.h>
int countdigit(int n)
{
    if(n/10==0){
      return 1;
    }
    else
    {
        return 1 + countdigit(n/10);
    }

(OR)
    
    if(n==0)
      return 1;
    int count =0;
      while(n>0)
      {
          n = n/10;
          count ++;
      }
      return count;
    
}

int main() {
    int n;
    scanf("%d",&n);
    printf("Number of digits is %d",countdigit(n));

    return 0;
}


4.// Reverse a number
#include <stdio.h>
int reverse(int n)
{
    int rev =0;
    while(n>0)
    {
        rev = rev*10 + n %10;
        n = n/10;
    }
    return rev;
}

int main() {
    int n;
    scanf("%d",&n);
    printf("Reverse of %d is %d",n,reverse(n));

    return 0;
}
5.//Power of a number
#include <stdio.h>

int main() {
    int b,e,result = 1;
    scanf("%d",&b);
    scanf("%d",&e);
    for(int i =0;i<e;i++)
    {
    result = result * b;
    }
    printf("%d",result);
    return 0;
}
6.//GCD of two numbers
#include <stdio.h>

int main() {
    // Write C code here
    int a,b,gcd;
    scanf("%d",&a);
    scanf("%d",&b);
    int value = (a<b)?a:b;
    for(int i = 1;i<=value;i++)
    {
    if(a%i==0 && b%i==0){
    gcd=i;
    }
    }
    printf("%d",gcd);
    return 0;
}
7.//All Divisor of a number
#include <stdio.h>
int main() {
    int n;
    scanf("%d",&n);
    for(int i =1;i<=n;i++)
    {
        if(n%i==0)
            printf("%d\n",i);
}
    return 0;
}
8.//Prime number or not.
#include <stdio.h>
int main() {
    int n,value=0;
    scanf("%d",&n);
    if(n==0||n==1)
        value = 1;
    for(int i=2;i<n/2;i++)
    {
        if(n%2==0)
            value = 1;
    }
    if(value==0)
        printf("%d is a prime number",n);
    else
        printf("%d is not a prime number",n);
return 0;
}
9.//Armstrong number
// Online C compiler to run C program online
#include <stdio.h>
#include<math.h>

int main() {
    int nd,num,rem,sum=0;
    scanf("%d",&nd);
    scanf("%d",&num);
    int temp = num;
    if(num!=0)
    {
    for(int i=0;i<nd;i++)
    {
        rem = num%10;
        sum = sum + pow(rem,nd);
        num = num/10;
    }
    }
    if(sum==temp)
        printf("%d is armstrong number",temp);
    else
        printf("%d is not a armstrong number",temp);
    

    return 0;
}
10.//Palindrome number
#include <stdio.h>

int main() {
    int n,temp,rem,sum =0;
    scanf("%d",&n);
    temp = n;
    
    while(n>0)
    {
        rem = n%10;
        sum = sum*10 + rem;
        n = n/10;
    }
    if(sum==temp)
        printf("%d is a palindrome number",temp);
    else
        printf("%d is not a palindrome number",temp);
    
    return 0;
}
11.//square root of a number
#include<stdio.h>
#include<math.h>
int main()
{
    int n;
    scanf("%d",&n);
    double result = sqrt(n);
    printf("%.2f",result);
    return 0;
}
12.//perfect number
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int n,sum = 0;
    scanf("%d",&n);
    for(int i=1;i<n;i++)
    {
        if(n%i==0)
        {
            sum = sum + i;
        }
    }
    if(sum==n)
    {
        printf("%d is a perfect number",n);
    }
    else
    {
        printf("%d is not a perfect number",n);
    }
    return 0;
}
13.//Fibonacci Series
#include<stdio.h>
int main()
{
int n;
scanf("%d",&n);
if(n<1)
    printf("Invalid Number");
int a=0,b=1;
for(int i=1;i<=n;i++)
{
if(i>2)
{
int c = a + b;
a = b;
b = c;
printf("%d ",c);
}
else if(i==1)
    printf("%d ",a);
else if(i==2)
    printf("%d ",b)
}
}
14.//Replacing all 0's to 1 in a number.
#include<stdio.h>
#include<math.h>
int main()
{
    int n;
    scanf("%d",&n);
    int ans = 0;
    for(int i=0;n!=0;i++)
    {
    if(n%10==0)
    {
        ans = ans + 1*pow(10,i);
    }
    else
    {
        ans = ans + (n%10)*pow(10,i);
    }
    n = n/10;
    }
    printf("%d",ans);
}


//Array concepts:
1.Find the maximum and minimum element in an array [4,6,2,5,9,7]
#include<stdio.h>
int main()
{
int n,a[10],max,min;
scanf("%d",&n);
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
max = a[0];
min = a[0];
for(int j=1;j<n;j++)
{
if(a[j]>max)
{
max = a[j];
}
if(a[j]<min)
{
min = a[j];
}
}
printf("Maximum = %d\n",max);
printf("Minimum = %d",min);
return 0;
}
2.//Sorting an array and finding largest Element(bubble Sort)
#include <stdio.h>
int sort(int n,int a[]){
    int i,j,temp;
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]>a[j]){
                temp = a[i];
                a[i]=a[j];
                a[j]=temp;
            }
        }
    }
    return 0;
}
  

int main() {
    int n,a[10];
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
   sort(n,a);
    printf("Sorted Array");
    for(int k=0; k<n; k++)
    {
        printf("%d ",a[k]);
    }
    printf("\nThird Largest Element is %d",a[n-3]);

    return 0;
}
3.//To search an element in an array:
#include<stdio.h>
int main()
{
int n,a[10],x;
scanf("%d",&n);
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
printf("Enter the number to search ");
scanf("%d",&x);
for(int i =0;i<n;i++){
    if(a[i]==x)
    {
        printf("The Element is at the %d postion in an array",i+1);
    }
}
return 0;
}
4.// Find the missing number in an array
#include <stdio.h>

int main() {
    int n,arr[100],total;
    scanf("%d",&n);
    total=n*(n+1)/2;
    printf("Enter the numbers from 1 to %d",n);
    for(int i=0;i<n-1;i++)
    {
        scanf("%d",&arr[i]);
        total=total-arr[i];
    }
    printf("%d",total);
    
    return 0;
}
5.//Find the repeating number in an array.
#include<stdio.h>
int main()
{
int n,a[10];
scanf("%d",&n);
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(int i =0;i<n;i++){
    for(int j=i+1;j<n;j++)
    if(a[i]==a[j])
    {
        printf("The number at position %d and %d are equal",i,j);
    }
}
return 0;
}
6.// Check if 2 arrays are same
#include<stdio.h>
int equal(int n,int a[10],int b[10])
{
    int flag = 0;
    for(int i =0;i<n;i++){
    if(a[i]==b[i]){
        flag++;
    }
    }
    if(flag==n)
        printf("Both arrays are same");
    
    else
       printf("Both arrays are not same");
return 0;
}

int main()
{
int n,a[10],b[10];
scanf("%d",&n);
printf("Enter the elements in 1st array:\n");
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
printf("Enter the elements in 2nd array:\n");
for(int i=0;i<n;i++)
{
scanf("%d",&b[i]);
}
equal(n,a,b);

return 0;
}
7.//Rotate array by 1
#include<stdio.h>
int main()
{
int n,a[10],temp;
scanf("%d",&n);
printf("Enter the elements in 1st array:\n");
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
temp = a[0];
}

for(int i=0;i<n-1;i++)
{
    a[i]=a[i+1];
}
for(int i =0;i<n;i++){
    a[n-1]=temp;
    printf("%d ",a[i]);
}
return 0;
}
8.// Rotate array by k times

#include<stdio.h>
int rotate(int n,int a[10]){
    int temp = a[0];
for(int i=0;i<n-1;i++)
{
    a[i]=a[i+1];
}
a[n-1] = temp;

return 0;
}
int main()
{
int n,a[10],temp,k;
scanf("%d",&n);
printf("Enter the elements in array:\n");
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
printf("Enter number of times to rotate an array: ");
scanf("%d",&k);
for(int i=0;i<k;i++)
{
    rotate(n,a);
}

for(int i =0;i<n;i++){
 
    printf("%d ",a[i]);
}
return 0;
}
9.//Array is a subset of another array
#include<stdio.h>
int subset(int n,int m,int a[10],int b[10])
{
    int flag = 0;
    for(int i =0;i<n;i++){
        for (int j=0;j<m;j++)
    if(a[i]==b[j]){
        flag++;
    }
    }
    if(flag==m)
        printf("array2 is a subset of array1");
    
    else
       printf("array2 is not a subset of array1");
return 0;
}

int main()
{
int n,m,a[10],b[10];
scanf("%d",&n);
scanf("%d",&m);
printf("Enter the elements in 1st array:\n");
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
printf("Enter the elements in 2nd array:\n");
for(int i=0;i<m;i++)
{
scanf("%d",&b[i]);
}
subset(n,m,a,b);

return 0;
}
10.//If an array is a subset of another array.
#include<stdio.h>
int subset(int m,int n,int a[100],int b[100])
{
    int count = 0;
  for(int j=0;j<n;j++){
      for(int i=0;i<m;i++){
          if(a[i]==b[j])
            count+=1;
      }
  }
  if(count==n){
      printf("2nd array is a subset of 1st array");
  }
  else{
      printf("2nd array is a not a subset of 1st array");
  }
  return 0;
}
int main(){
    int m,n,a[100],b[100];
    scanf("%d",&m);
    scanf("%d",&n);
    printf("Enter the elements in 1st array:\n");
    for(int i=0;i<m;i++){
        scanf("%d",&a[i]);
    }
    printf("Enter the elements in 2nd array:\n");
    for(int i=0;i<n;i++){
        scanf("%d",&b[i]);
    }
    subset(m,n,a,b);
    return 0;
}
11.//sort all 0s,1s,2s in an array
#include <stdio.h>
int sort(int n, int a[100]) {
    int count = 0, count1 = 0, count2 = 0;

    for (int i = 0; i < n; i++) {
        if (a[i] == 0)
            count++;
        else if (a[i] == 1)
            count1++;
        else if (a[i] == 2)
            count2++;
    }

    int index = 0;
    for (int i = 0; i < count; i++)
        a[index++] = 0;
    for (int i = 0; i < count1; i++)
        a[index++] = 1;
    for (int i = 0; i < count2; i++)
        a[index++] = 2;
    return 0;
}

int main() {
    int n, a[100];
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }
    sort(n, a);
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    return 0;
}




//3.Union of two arrays
#include <stdio.h>

int arr_union(int m, int n, int a[100], int b[100]) {
    int result[200];  // Increased size for safety
    int index = 0;

    // Insert elements of a[] into result[] if not already present
    for (int i = 0; i < m; i++) {
        int found = 0;
        for (int j = 0; j < index; j++) {
            if (a[i] == result[j]) {
                found = 1;
                break;
            }
        }
        if (!found) {
            result[index++] = a[i];
        }
    }

    // Insert elements of b[] into result[] if not already present
    for (int i = 0; i < n; i++) {
        int found = 0;
        for (int j = 0; j < index; j++) {
            if (b[i] == result[j]) {
                found = 1;
                break;
            }
        }
        if (!found) {
            result[index++] = b[i];
        }
    }

    // Print the result
    for (int i = 0; i < index; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");

    return 0;
}

int main() {
    int m, n, a[100], b[100];
    
    scanf("%d", &m);
    for (int i = 0; i < m; i++) {
        scanf("%d", &a[i]);
    }

    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &b[i]);
    }

    arr_union(m, n, a, b);
    return 0;
}

4.// Intersection of two arrays

#include <stdio.h>

void inter(int m, int n, int a[100], int b[100]) {
    int result[100];
    int index = 0;

    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (a[i] == b[j]) {
                int f = 0;
                for (int k = 0; k < index; k++) {
                    if (a[i] == result[k]) {
                        f = 1;
                        break;
                    }
                }
                if (f == 0) {
                    result[index++] = a[i];
                }
            }
        }
    }

    printf("Intersection of the arrays: ");
    for (int i = 0; i < index; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");
}

int main() {
    int m, n, a[100], b[100];

    printf("Enter number of elements in 1st array: ");
    scanf("%d", &m);
    printf("Enter the elements of 1st array:\n");
    for (int i = 0; i < m; i++) {
        scanf("%d", &a[i]);
    }

    printf("Enter number of elements in 2nd array: ");
    scanf("%d", &n);
    printf("Enter the elements of 2nd array:\n");
    for (int j = 0; j < n; j++) {
        scanf("%d", &b[j]);
    }

    inter(m, n, a, b);

    return 0;
}



Recursion Concepts:
1.//Print N natural numbers using recursion
#include <stdio.h>
void print(int n) {
    if (n != 0){
        print(n - 1);    
        printf("%d ", n);
        }
    else{
        return 0;
}
}
int main() {
    int n;
    scanf("%d", &n);
    print(n);
    return 0;
}
2.//Factorial of N numbers:
#include<stdio.h>
int fact(int n){
    if(n>=1){
        return n*fact(n-1);
    }
    else{
        return 1;
    }    
}
int main(){
    int n;
    scanf("%d",&n);
    printf("Factorial of %d is %d",n,fact(n));
}





    



